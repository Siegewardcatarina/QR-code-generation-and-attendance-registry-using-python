#Start Of Code

#Libraries
import cv2                 #For opening and using Camera
import pyzbar.pyzbar as pb #For Scanning and Decoding QR and Bar codes
import time                #For using Delay function
import datetime            #For Taking input of Date and Time from System

#date1=datetime.now().strftime("%Y_%m_%d-%I:%M:%S_%p")

filename = datetime.datetime.now()

# Function creates an empty file
# %d - date, %B - month, %Y - Year
#with open(filename.strftime("%d %B %Y")+".txt", "a") as file:
#   file.write("")

# starting the webcam using opencv
cap = cv2.VideoCapture(0)

#Necessary initializations
fob = open('Studentname1.txt', 'w+')         #file initialized
names = []                                   #names list initialized

#file = open('Attendance.txt','w')

# function for writing the data into text file
def enterData(z):
    if z in names:
        pass
    else:
        names.append(z)
        z = ''.join(str(z))
        fob.write(z + '\n')
    return names                             #Produces individual names as function output

print('Reading the QR...')

# function for check the data is present or not
def checkData(data):                         #if Name is marked already displays 'Already present as output else Marks attendance
    data = str(data)
    if data in names:
        print('Already Present')
    else:
        with open(filename.strftime("%d %B %Y") + ".txt", "a") as file:
            file.write(data + '\n')
        print('\n' + str(len(names) + 1) + '\n' + data)
        enterData(data)

while True:
    i, frame = cap.read()
    decodedObjects = pb.decode(frame)        #Decodes the QR from frame using pyzbar
    for obj in decodedObjects:
        checkData(obj.data)
        time.sleep(1)                        #Delay of 1 second

    cv2.imshow("QR Scanner", frame) #Name of the Frame and variable assigned

# closing the program when s is pressed
    if cv2.waitKey(20) & 0xFF == ord('q'):  # 'Q'/'q' when pressed stop the program
        break

# When everything done, release the capture
cap.release()
cv2.destroyAllWindows()
fob.close() #Closing the file
